<AuthorizeView>
    <Authorized>
        @if (LoaderVisible)
        {
            <Loader></Loader>
        }
        else
        {
    <div class="mainContainer">
        @foreach (var post in postList)
        {
            <a href="" class="clickablePost"><PostPreview Post="post"></PostPreview></a>            
        }
    </div>

        }
    </Authorized>    
    <NotAuthorized>
        <Login></Login>
    </NotAuthorized>
</AuthorizeView>


@code{

    [Inject]
    public IPostManager PostManager { get; set; }

    public bool LoaderVisible { get; set; } = true;

    private IEnumerable<PostRead> postList = new List<PostRead>();

    protected override async Task OnInitializedAsync()
    {
        var postsInDb = await PostManager.GetAsync().ConfigureAwait(false);
        postList = postsInDb.Select(postInDb => new PostRead
        {
            Title = postInDb.Title,
            Text = postInDb.Text,
            CreateDateTime = postInDb.CreateDateTime.GetValueOrDefault(),
            Tags = postInDb.Tags.Select(x => new Tag { Id = x.Id, Name = x.Name })
        });
        CancelLoader();
    }

    protected void CancelLoader() => LoaderVisible = false;
}