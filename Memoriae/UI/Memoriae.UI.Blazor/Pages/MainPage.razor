@using Microsoft.AspNetCore.Components;
@inject Microsoft.AspNetCore.Components.NavigationManager nav

<AuthorizeView>
    <Authorized>
        @if (LoaderVisible)
        {
            <Loader></Loader>
        }
        else
        {
            <div class="mainpagecontainer">
                <div class="leftpane">
                    <Logo Aligment=@Aligment.Top></Logo>
                </div>
                <div class="middlepane">
                    @foreach (var post in postList)
                    {
                        <a class="clickablePost" @onclick="() => Navigate(post.Id)"><PostPreview Post="post"></PostPreview></a>
                    }
                </div>
                <div class="rightpane">
                    <h1>Test Page</h1>
                </div>
            </div>
            @*<div class="mainContainer">
                @foreach (var post in postList)
                {
                    <a class="clickablePost" @onclick="() => Navigate(post.Id)"><PostPreview Post="post"></PostPreview></a>
                }
            </div>*@

        }
    </Authorized>
    <NotAuthorized>
        <Login></Login>
    </NotAuthorized>
</AuthorizeView>


@code{

    [Inject]
    public IPostManager PostManager { get; set; }

    public bool LoaderVisible { get; set; } = true;

    private IEnumerable<PostRead> postList = new List<PostRead>();

    protected override async Task OnInitializedAsync()
    {
        var postsInDb = await PostManager.GetAsync().ConfigureAwait(false);
        postList = postsInDb.Select(postInDb => new PostRead
        {
            Id = postInDb.Id,
            Title = postInDb.Title,
            Text = postInDb.Text,
            CreateDateTime = postInDb.CreateDateTime.GetValueOrDefault(),
            Tags = postInDb.Tags.Select(x => new Tag { Id = x.Id, Name = x.Name })
        });
        CancelLoader();
    }

    protected void CancelLoader() => LoaderVisible = false;

    private void Navigate(Guid postId)
    {
        nav.NavigateTo("/read/" + postId);
    }
}