@page "/read/{PostId}"
@inject Microsoft.AspNetCore.Components.NavigationManager nav

<AuthorizeView>
    <Authorized>
        @if (LoaderVisible)
        {
            <Loader></Loader>
        }
        else
        {
            <div class="addContainer">
                <DateTimeLine DateTimeValue="@post.CreateDateTime"></DateTimeLine>
                <p class="inputTitle">@post.Title</p>
                <TagLine Aligment="@Aligment.Top" Tags="@post.Tags" OnTagClicked="@TriggerTagSearch"></TagLine>
                <p style="text-align: justify; font-size: 14px">
                    @((MarkupString)post.Text)
                </p>
            </div>
        }
    </Authorized>    
    <NotAuthorized>
        <Login></Login>
    </NotAuthorized>
</AuthorizeView>


@code{

    [Inject]
    public IPostManager PostManager { get; set; }

    [Parameter]
    public string PostId { get; set; }

    [Parameter]
    public EventCallback<string> OnTagClicked { get; set; }

    public bool LoaderVisible { get; set; } = true;

    private PostRead post = new PostRead();

    protected override async Task OnInitializedAsync()
    {        
        var postInDb = await PostManager.GetAsync(Guid.Parse(PostId)).ConfigureAwait(false);
        post = new PostRead
        {
            Title = postInDb.Title,
            Text = postInDb.Text,
            CreateDateTime = postInDb.CreateDateTime.GetValueOrDefault(),
            Tags = postInDb.Tags.Select(x => new Tag { Id = x.Id, Name = x.Name })
        };
        CancelLoader();
    }

    protected void CancelLoader() => LoaderVisible = false;

    private void TriggerTagSearch(string tagName)
    {
         nav.NavigateTo($"/mainPage/{tagName}", true);
    }
}