@page "/addorupdate"
@using Blazored.TextEditor

<AuthorizeView>
    <Authorized>
        <Logo Aligment=@Aligment.Top></Logo>

        <div class="addContainer">
            <input type="text" placeholder="Введите заголовок" @bind="post.Title" class="transparentInputTitle" />
            <BlazoredTextEditor @ref="@post.Text" Placeholder="Введите текст">
                <ToolbarContent>
                    <select class="ql-header">
                        <option selected=""></option>
                        <option value="1"></option>
                        <option value="2"></option>
                        <option value="3"></option>
                        <option value="4"></option>
                        <option value="5"></option>
                    </select>
                    <span class="ql-formats">
                        <button class="ql-bold"></button>
                        <button class="ql-italic"></button>
                        <button class="ql-underline"></button>
                        <button class="ql-strike"></button>
                    </span>
                    <span class="ql-formats">
                        <button class="ql-list" value="ordered"></button>
                        <button class="ql-list" value="bullet"></button>
                    </span>
                </ToolbarContent>
                <EditorContent>
                </EditorContent>
            </BlazoredTextEditor>
        </div>

        <button type="submit" class="saveBorderedButton" style="position: fixed; right:0; bottom:0; margin-bottom: 10px; margin-right: 10px; float: right" @onclick="SaveAsync">Сохранить</button>
    </Authorized>
    <NotAuthorized>
        <Login></Login>
    </NotAuthorized>
</AuthorizeView>

@code{
    [Inject]
    public IPostManager PostManager { get; set; }

    private PostCreate post = new PostCreate();

    protected async Task SaveAsync()
    {
        await PostManager.CreateAsync(new BAL.Core.Models.Post
        {
            Text = await post.Text.GetHTML().ConfigureAwait(false),
            Title = post.Title
        }).ConfigureAwait(false);
    }
}