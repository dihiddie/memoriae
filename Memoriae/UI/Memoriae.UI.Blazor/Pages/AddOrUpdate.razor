@page "/addorupdate"
@using Blazored.TextEditor

<Logo Aligment=@Aligment.Top></Logo>

<div class="addContainer">
    <p>
        <input type="text" placeholder="Введите заголовок" @bind="post.Title" class="transparentInputTitle" />
    </p>
    <BlazoredTextEditor @ref="@QuillHtml" Placeholder="Введите текст">
        <ToolbarContent>
            <select class="ql-header">
                <option selected=""></option>
                <option value="1"></option>
                <option value="2"></option>
                <option value="3"></option>
                <option value="4"></option>
                <option value="5"></option>
            </select>
            <span class="ql-formats">
                <button class="ql-bold"></button>
                <button class="ql-italic"></button>
                <button class="ql-underline"></button>
                <button class="ql-strike"></button>
            </span>
            <span class="ql-formats">
                <button class="ql-list" value="ordered"></button>
                <button class="ql-list" value="bullet"></button>
            </span>
        </ToolbarContent>
        <EditorContent>
        </EditorContent>
    </BlazoredTextEditor>
</div>

<div class="sidePanel">
    @*<button type="submit" class="saveBorderedButton" style="margin-right: 20px; margin-bottom: 20px; float: right" @onclick="SaveAsync">Сохранить</button>*@
    <button type="submit" class="saveButton" style="margin-right: 20px; margin-bottom: 20px; float: right" @onclick="SaveAsync">Сохранить</button>
</div>
<div class="sidePanel">
    <button type="submit" class="saveButton" style="margin-right: 20px; margin-bottom: 70px; float: right" @onclick="SaveAsync">Тэги</button>
</div>

@*@code { 
    // BlazoredTextEditor QuillHtml;
    BlazoredTextEditor QuillNative;
    BlazoredTextEditor QuillReadOnly;

    string QuillHTMLContent;
    string QuillContent;


    public async void GetHTML()
    {
        QuillHTMLContent = await this.QuillHtml.GetHTML();
        StateHasChanged();
    }

    public async void SetHTML()
    {
        string QuillContent =
            @"<p><strong><em><u>большие банки</u></em></strong></p>";

        await this.QuillHtml.LoadHTMLContent(QuillContent);
        StateHasChanged();
    }

    public async void GetContent()
    {
        QuillContent = await this.QuillNative.GetContent();
        StateHasChanged();
    }

    private void ReportPointerLocation(MouseEventArgs e)
    {
        Console.WriteLine("My debug output.");
        // mousePointerMessage = $"Mouse coordinates: {e.ScreenX}:{e.ScreenY}";
    }

 }*@