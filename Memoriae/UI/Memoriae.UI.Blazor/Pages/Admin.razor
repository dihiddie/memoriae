@page "/admin"

@using Microsoft.AspNetCore.Components;
@inject Microsoft.AspNetCore.Components.NavigationManager nav

<AuthorizeView>
    <Authorized>
        @if (LoaderVisible)
        {
            <Loader></Loader>
        }
        else
        {
            <div class="adminleftpanel">
                <Logo Aligment=@Aligment.Top></Logo>

                <ul>
                    <li>Все записи</li>
                    <li>Статистика</li>
                </ul>

                <button type="submit" class="addButton" style="position: fixed; bottom:0; margin-bottom: 10px;" @onclick="@(() => nav.NavigateTo("/addorupdate"))">Добавить запись</button>                  
            </div>
            <div class="adminmiddlepanel">
                   @if (!postList.Any())
                {
                    <i class="nothingToSee">Пока ничего нет</i>
                }
                else
                {
                    @foreach (var post in postList)
                    {
                        <a class="clickablePost" href="addorupdate/@post.Id">
                            <AdminPostPreview Post="post"></AdminPostPreview>
                        </a>
                    }
                }
            </div>
            <div class="adminrightpanel">
                <Menu></Menu>
            </div>           

        }
    </Authorized>
    <NotAuthorized>
        <Login></Login>
    </NotAuthorized>
</AuthorizeView>


@code{

    [Inject]
    public IPostManager PostManager { get; set; }

    public string SearchText { get; set; }

    public bool LoaderVisible { get; set; } = true;

    private IEnumerable<PostRead> postList = new List<PostRead>();

    protected override async Task OnInitializedAsync()
    {
        var postsInDb = await PostManager.GetAsync().ConfigureAwait(false);
        postList = postsInDb.Select(postInDb => new PostRead
        {
            Id = postInDb.Id,
            Title = postInDb.Title,
            PreviewText = postInDb.PreviewText,
            CreateDateTime = postInDb.CreateDateTime.GetValueOrDefault(),
            Tags = postInDb.Tags.Select(x => new Tag { Id = x.Id, Name = x.Name })
        });
        CancelLoader();
    }

    protected void CancelLoader() => LoaderVisible = false;

    protected void StartLoader() => LoaderVisible = true;

    private void Navigate(Guid postId)
    {
        nav.NavigateTo("/read/" + postId);
    }
}